#!/usr/bin/env python3
# -*- coding: utf-8 -*-
__author__ = 'petro-ew'
"""
54. Одна запись в списке запланированных дел представляет собой экземпляр класса DailyItem,
 который содержит время начала и окончания работы,
  описание и признак выполнения.
   Реализовать класс DailySchedule,
    представляющий собой план работ на день.
     Реализовать методы
      добавления,
      удаления
       и изменения планируемой работы.
        При добавлении проверять корректность временных рамок
   (они не должны пересекаться с уже запланированными мероприятиями).
   В случае попытки добавить мероприятие,
    пересекающееся по времени с уже запланированными,
     генерировать исключение.
      Реализовать метод поиска свободного промежутка времени.
       Условие поиска задает размер искомого интервала,
        а также временные рамки, в которые он должен попадать.
         Метод поиска возвращает экземпляр класса DailyItem с пустым описанием вида работ.
         Реализовать метод Redo (еще раз),
          возвращающий список дел, не выполненных в течении дня.

"""
class DailyItem:
    #запись в списке запланированных дел.
    def time_start(self):
        print("date start")

    def time_end(self):
        print("date end")

    def data(self):
        print("data")

    def pr_end(self):
        print("priznak vipolneniya")




class DailyShedule:

    def add(self):
        print("add work")

    def delete(self):
        print("delete work")

    def change(self):
        print("change work")